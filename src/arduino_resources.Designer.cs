//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4918
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AVRProjectIDE {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class arduino_resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal arduino_resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AVRProjectIDE.arduino_resources", typeof(arduino_resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #ifndef Binary_h
        ///#define Binary_h
        ///
        ///#define B0 0
        ///#define B00 0
        ///#define B000 0
        ///#define B0000 0
        ///#define B00000 0
        ///#define B000000 0
        ///#define B0000000 0
        ///#define B00000000 0
        ///#define B1 1
        ///#define B01 1
        ///#define B001 1
        ///#define B0001 1
        ///#define B00001 1
        ///#define B000001 1
        ///#define B0000001 1
        ///#define B00000001 1
        ///#define B10 2
        ///#define B010 2
        ///#define B0010 2
        ///#define B00010 2
        ///#define B000010 2
        ///#define B0000010 2
        ///#define B00000010 2
        ///#define B11 3
        ///#define B011 3
        ///#define B0011 3
        ///#define B00011 3
        ///#define B000011 3
        ///#define B00000 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string binary {
            get {
                return ResourceManager.GetString("binary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///  HardwareSerial.cpp - Hardware serial library for Wiring
        ///  Copyright (c) 2006 Nicholas Zambetti.  All right reserved.
        ///
        ///  This library is free software; you can redistribute it and/or
        ///  modify it under the terms of the GNU Lesser General Public
        ///  License as published by the Free Software Foundation; either
        ///  version 2.1 of the License, or (at your option) any later version.
        ///
        ///  This library is distributed in the hope that it will be useful,
        ///  but WITHOUT ANY WARRANTY; without even the implied warranty of
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HardwareSerialcpp {
            get {
                return ResourceManager.GetString("HardwareSerialcpp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///  HardwareSerial.h - Hardware serial library for Wiring
        ///  Copyright (c) 2006 Nicholas Zambetti.  All right reserved.
        ///
        ///  This library is free software; you can redistribute it and/or
        ///  modify it under the terms of the GNU Lesser General Public
        ///  License as published by the Free Software Foundation; either
        ///  version 2.1 of the License, or (at your option) any later version.
        ///
        ///  This library is distributed in the hope that it will be useful,
        ///  but WITHOUT ANY WARRANTY; without even the implied warranty of
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HardwareSerialh {
            get {
                return ResourceManager.GetString("HardwareSerialh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///  pins_arduino.c - pin definitions for the Arduino board
        ///  Part of Arduino / Wiring Lite
        ///
        ///  Copyright (c) 2005 David A. Mellis
        ///
        ///  This library is free software; you can redistribute it and/or
        ///  modify it under the terms of the GNU Lesser General Public
        ///  License as published by the Free Software Foundation; either
        ///  version 2.1 of the License, or (at your option) any later version.
        ///
        ///  This library is distributed in the hope that it will be useful,
        ///  but WITHOUT ANY WARRANTY; without even the implied warr [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pins_arduinoc {
            get {
                return ResourceManager.GetString("pins_arduinoc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///  pins_arduino.h - Pin definition functions for Arduino
        ///  Part of Arduino - http://www.arduino.cc/
        ///
        ///  Copyright (c) 2007 David A. Mellis
        ///
        ///  This library is free software; you can redistribute it and/or
        ///  modify it under the terms of the GNU Lesser General Public
        ///  License as published by the Free Software Foundation; either
        ///  version 2.1 of the License, or (at your option) any later version.
        ///
        ///  This library is distributed in the hope that it will be useful,
        ///  but WITHOUT ANY WARRANTY; without even the im [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string pins_arduinoh {
            get {
                return ResourceManager.GetString("pins_arduinoh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// Print.cpp - Base class that provides print() and println()
        /// Copyright (c) 2008 David A. Mellis.  All right reserved.
        /// 
        /// This library is free software; you can redistribute it and/or
        /// modify it under the terms of the GNU Lesser General Public
        /// License as published by the Free Software Foundation; either
        /// version 2.1 of the License, or (at your option) any later version.
        /// 
        /// This library is distributed in the hope that it will be useful,
        /// but WITHOUT ANY WARRANTY; without even the implied warranty of
        /// MERC [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Printcpp {
            get {
                return ResourceManager.GetString("Printcpp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///  Print.h - Base class that provides print() and println()
        ///  Copyright (c) 2008 David A. Mellis.  All right reserved.
        ///
        ///  This library is free software; you can redistribute it and/or
        ///  modify it under the terms of the GNU Lesser General Public
        ///  License as published by the Free Software Foundation; either
        ///  version 2.1 of the License, or (at your option) any later version.
        ///
        ///  This library is distributed in the hope that it will be useful,
        ///  but WITHOUT ANY WARRANTY; without even the implied warranty of
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Printh {
            get {
                return ResourceManager.GetString("Printh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &quot;wiring.h&quot;
        ///.
        /// </summary>
        internal static string WConstants {
            get {
                return ResourceManager.GetString("WConstants", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /* -*- mode: jde; c-basic-offset: 2; indent-tabs-mode: nil -*- */
        ///
        ////*
        ///  Part of the Wiring project - http://wiring.uniandes.edu.co
        ///
        ///  Copyright (c) 2004-05 Hernando Barragan
        ///
        ///  This library is free software; you can redistribute it and/or
        ///  modify it under the terms of the GNU Lesser General Public
        ///  License as published by the Free Software Foundation; either
        ///  version 2.1 of the License, or (at your option) any later version.
        ///
        ///  This library is distributed in the hope that it will be useful,
        ///  but WITHOUT [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WInterrupts {
            get {
                return ResourceManager.GetString("WInterrupts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///  wiring_analog.c - analog input and output
        ///  Part of Arduino - http://www.arduino.cc/
        ///
        ///  Copyright (c) 2005-2006 David A. Mellis
        ///
        ///  This library is free software; you can redistribute it and/or
        ///  modify it under the terms of the GNU Lesser General Public
        ///  License as published by the Free Software Foundation; either
        ///  version 2.1 of the License, or (at your option) any later version.
        ///
        ///  This library is distributed in the hope that it will be useful,
        ///  but WITHOUT ANY WARRANTY; without even the implied w [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string wiring_analog {
            get {
                return ResourceManager.GetString("wiring_analog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///  wiring_digital.c - digital input and output functions
        ///  Part of Arduino - http://www.arduino.cc/
        ///
        ///  Copyright (c) 2005-2006 David A. Mellis
        ///
        ///  This library is free software; you can redistribute it and/or
        ///  modify it under the terms of the GNU Lesser General Public
        ///  License as published by the Free Software Foundation; either
        ///  version 2.1 of the License, or (at your option) any later version.
        ///
        ///  This library is distributed in the hope that it will be useful,
        ///  but WITHOUT ANY WARRANTY; without even t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string wiring_digital {
            get {
                return ResourceManager.GetString("wiring_digital", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///  wiring_private.h - Internal header file.
        ///  Part of Arduino - http://www.arduino.cc/
        ///
        ///  Copyright (c) 2005-2006 David A. Mellis
        ///
        ///  This library is free software; you can redistribute it and/or
        ///  modify it under the terms of the GNU Lesser General Public
        ///  License as published by the Free Software Foundation; either
        ///  version 2.1 of the License, or (at your option) any later version.
        ///
        ///  This library is distributed in the hope that it will be useful,
        ///  but WITHOUT ANY WARRANTY; without even the implied wa [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string wiring_private {
            get {
                return ResourceManager.GetString("wiring_private", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///  wiring_pulse.c - pulseIn() function
        ///  Part of Arduino - http://www.arduino.cc/
        ///
        ///  Copyright (c) 2005-2006 David A. Mellis
        ///
        ///  This library is free software; you can redistribute it and/or
        ///  modify it under the terms of the GNU Lesser General Public
        ///  License as published by the Free Software Foundation; either
        ///  version 2.1 of the License, or (at your option) any later version.
        ///
        ///  This library is distributed in the hope that it will be useful,
        ///  but WITHOUT ANY WARRANTY; without even the implied warrant [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string wiring_pulse {
            get {
                return ResourceManager.GetString("wiring_pulse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///  wiring_shift.c - shiftOut() function
        ///  Part of Arduino - http://www.arduino.cc/
        ///
        ///  Copyright (c) 2005-2006 David A. Mellis
        ///
        ///  This library is free software; you can redistribute it and/or
        ///  modify it under the terms of the GNU Lesser General Public
        ///  License as published by the Free Software Foundation; either
        ///  version 2.1 of the License, or (at your option) any later version.
        ///
        ///  This library is distributed in the hope that it will be useful,
        ///  but WITHOUT ANY WARRANTY; without even the implied warran [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string wiring_shift {
            get {
                return ResourceManager.GetString("wiring_shift", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///  wiring.c - Partial implementation of the Wiring API for the ATmega8.
        ///  Part of Arduino - http://www.arduino.cc/
        ///
        ///  Copyright (c) 2005-2006 David A. Mellis
        ///
        ///  This library is free software; you can redistribute it and/or
        ///  modify it under the terms of the GNU Lesser General Public
        ///  License as published by the Free Software Foundation; either
        ///  version 2.1 of the License, or (at your option) any later version.
        ///
        ///  This library is distributed in the hope that it will be useful,
        ///  but WITHOUT ANY WARRANTY; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string wiringc {
            get {
                return ResourceManager.GetString("wiringc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///  wiring.h - Partial implementation of the Wiring API for the ATmega8.
        ///  Part of Arduino - http://www.arduino.cc/
        ///
        ///  Copyright (c) 2005-2006 David A. Mellis
        ///
        ///  This library is free software; you can redistribute it and/or
        ///  modify it under the terms of the GNU Lesser General Public
        ///  License as published by the Free Software Foundation; either
        ///  version 2.1 of the License, or (at your option) any later version.
        ///
        ///  This library is distributed in the hope that it will be useful,
        ///  but WITHOUT ANY WARRANTY; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string wiringh {
            get {
                return ResourceManager.GetString("wiringh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /* -*- mode: jde; c-basic-offset: 2; indent-tabs-mode: nil -*- */
        ///
        ////*
        ///  Part of the Wiring project - http://wiring.org.co
        ///  Copyright (c) 2004-06 Hernando Barragan
        ///  Modified 13 August 2006, David A. Mellis for Arduino - http://www.arduino.cc/
        ///  
        ///  This library is free software; you can redistribute it and/or
        ///  modify it under the terms of the GNU Lesser General Public
        ///  License as published by the Free Software Foundation; either
        ///  version 2.1 of the License, or (at your option) any later version.
        ///
        ///  This  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WMath {
            get {
                return ResourceManager.GetString("WMath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #ifndef WProgram_h
        ///#define WProgram_h
        ///
        ///#include &lt;stdlib.h&gt;
        ///#include &lt;string.h&gt;
        ///#include &lt;math.h&gt;
        ///
        ///#include &lt;avr/interrupt.h&gt;
        ///
        ///#include &quot;wiring.h&quot;
        ///
        ///#ifdef __cplusplus
        ///#include &quot;HardwareSerial.h&quot;
        ///
        ///uint16_t makeWord(uint16_t w);
        ///uint16_t makeWord(byte h, byte l);
        ///
        ///#define word(...) makeWord(__VA_ARGS__)
        ///
        ///unsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);
        ///
        ///// WMath prototypes
        ///long random(long);
        ///long random(long, long);
        ///void randomSeed(unsigned int);
        ///long map(long, long, long, l [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WProgram {
            get {
                return ResourceManager.GetString("WProgram", resourceCulture);
            }
        }
    }
}
